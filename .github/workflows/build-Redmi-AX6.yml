#=================================================
#   Description: Build Redmi-AX6 FROM LEAN'S LEDE
#   Author: JK/Cath
#=================================================

name: Build Redmi-AX6

on: 
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'  
  release:
    types: [published]
  push:
    branches: 
      - main
  schedule:
    - cron: 0 9 * * */2
   
  workflow_call:
jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Check server performance
      run: |
        echo "警告！"
        echo "若分配的服务器性能不足，务必及时取消，重新运行！"
        echo "已知编译成功CPU型号：8370C,8171M"
        echo "已知性能不足CPU型号：8272CL"
        echo -e "-------------- ------------CPU信息------------------------------------------\n"
        echo "CPU物理数量:$(cat /proc/cpuinfo| grep "physical id"| sort| uniq| wc -l)"
        echo -e "CPU核心及版本信息：$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) \n"
        echo "-------------------------------内存信息-------------------------------------------"
        echo "已安装内存详细信息："
        sudo lshw -short -C memory | grep GiB
        echo -e "\n"
        echo "-----------------------------硬盘信息---------------------------------------------"
        echo -e  "硬盘数量：$(ls /dev/sd* | grep -v [1-9] | wc -l) \n"
        echo "硬盘详情："
        df -Th

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        sudo -E apt-get update
        sudo apt install -y ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential \
        bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
        git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \
        libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz \
        mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils \
        rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E apt-get -y autoremove --purge

    - name: Clone source code
      run: |
        git clone -b openwrt-22.03 https://github.com/openwrt/openwrt openwrt

    - name: Cache
      uses: klever1988/cachewrtbuild@main
      with:
        ccache: 'true'
        prefix: ${{ github.workspace }}/openwrt

    - name: enable magic
      run: |
        cd openwrt 
        cp ../feeds.conf.default ./feeds.conf.default
   

    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: |
        cd openwrt
        ./scripts/feeds install -a
        
    - name: Install feeds1
      run: |
        cd openwrt
        ./scripts/feeds install -f
            
            
    - name: Load custom configuration
      run: |
        cp .config ./openwrt/.config
        chmod +x 5.15.sh
        chmod +x diy.sh
        cp 5.15.sh openwrt
        cp diy.sh openwrt
        cd openwrt
        ./diy.sh
        make defconfig

    - name: Download package
      run: |
        echo -e "$(nproc) thread build."
        cd lede && make download -j$(nproc)
        echo -e 'CONFIG_DEVEL=y\nCONFIG_CCACHE=y' >> .config; make defconfig
        

    - name: Build
      run: |
        cd openwrt
        echo -e "$(nproc) thread build."
        make -j$(nproc) 
        rm -rf ./bin/targets/ipq807x/generic/packages

    - name : Upload artifact
      uses: actions/upload-artifact@main
      with:
        name: Redmi-AX6
        path: ./lede/bin/targets/ipq807x/generic/
